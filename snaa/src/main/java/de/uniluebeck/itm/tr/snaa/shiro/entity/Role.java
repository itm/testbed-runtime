package de.uniluebeck.itm.tr.snaa.shiro.entity;
// Generated 26 juil. 2013 14:38:11 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name="ROLES"
    ,catalog="trauth"
)
public class Role  implements java.io.Serializable {


     private String name;
     private Set<User> users = new HashSet<User>(0);
     private Set<UsersCert> usersCerts = new HashSet<UsersCert>(0);
     private Set<Permission> permissions = new HashSet<Permission>(0);

    public Role() {
    }

	
    public Role(String name) {
        this.name = name;
    }
    public Role(String name, Set<User> users, Set<UsersCert> usersCerts, Set<Permission> permissions) {
       this.name = name;
       this.users = users;
       this.usersCerts = usersCerts;
       this.permissions = permissions;
    }
   
     @Id 
    
    @Column(name="NAME", unique=true, nullable=false, length=150)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="USERS_ROLES", catalog="trauth", joinColumns = { 
        @JoinColumn(name="ROLE_NAME", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="USER_NAME", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="USERSCERT_ROLES", catalog="trauth", joinColumns = { 
        @JoinColumn(name="ROLE_NAME", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="USERSCERT_NAME", nullable=false, updatable=false) })
    public Set<UsersCert> getUsersCerts() {
        return this.usersCerts;
    }
    
    public void setUsersCerts(Set<UsersCert> usersCerts) {
        this.usersCerts = usersCerts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="role")
    public Set<Permission> getPermissions() {
        return this.permissions;
    }
    
    public void setPermissions(Set<Permission> permissions) {
        this.permissions = permissions;
    }




}


